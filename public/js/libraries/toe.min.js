(function (e, t, n) { function c(t) { var n = e(t.target); s.clearState(), s.touches.start = r.getTouches(t), s.events.start = t, s.timestamp = (new Date).getTime(), s.events.start = t, s.offset = n.offset(), o.exec("start", t) } function h(e) { if (!s.timestamp) return; s.touches.move = r.getTouches(e), s.events.move = e, o.exec("move", e) } function p(e) { if (!s.timestamp) return; s.touches.end = r.getTouches(e), s.events.end = e, o.exec("end", e), s.prevGesture = s.gesture, s.clearState() } function d(t, n, r) { var i = e(this), s = i.data("toe") || 0; s === 0 && (i.on("touchstart", a), i.on("touchmove", f), i.on("touchend touchcancel", l)), i.data("toe", ++s) } function v(t) { var n = e(this), r = n.data("toe") || 0; n.data("toe", --r), r === 0 && (n.off("touchstart", a), n.off("touchmove", f), n.off("touchend touchcancel", l)) } function m(t) { u && (e.event.special[t] = { setup: d, teardown: v }) } var r = {}; r.getTouches = function (t) { return t.originalEvent && t.originalEvent.touches ? t.originalEvent.touches.length > 0 ? e.extend(!0, {}, t.originalEvent.touches) : t.originalEvent.changedTouches.length > 0 ? e.extend(!0, {}, t.originalEvent.changedTouches) : [] : [] }, r.hasEvent = function (e, t) { return e.data("events") ? e.data("events")[t] : 0 }; var i = {}; i.getDirection = function (e) { if (e < -45 && e > -135) return "top"; if (e >= -45 && e <= 45) return "right"; if (e >= 45 && e < 135) return "down"; if (e >= 135 || e <= -135) return "left" }, i.getAngle = function (e, t) { return Math.atan2(t.pageY - e.pageY, t.pageX - e.pageX) * 180 / Math.PI }, i.getScale = function (e, t) { return e.length === 2 && t.length === 2 ? Math.sqrt(Math.pow(t[0].pageX - t[1].pageX, 2) + Math.pow(t[0].pageY - t[1].pageY, 2)) / Math.sqrt(Math.pow(e[0].pageX - e[1].pageX, 2) + Math.pow(e[0].pageY - e[1].pageY, 2)) : 0 }, i.getRotation = function (e, t) { return e.length === 2 && t.length === 2 ? Math.atan2(t[0].pageY - t[1].pageY, t[0].pageX - t[1].pageX) * 180 / Math.PI - Math.atan2(e[0].pageY - e[1].pageY, e[0].pageX - e[1].pageX) * 180 / Math.PI : 0 }, i.getDistance = function (e, t) { return Math.sqrt(Math.pow(t.pageX - e.pageX, 2) + Math.pow(t.pageY - e.pageY, 2)) }; var s = { touches: {}, events: {}, timestamp: n, prevGesture: null, offset: {} }; s.clearState = function () { s.touches = {}, s.events = {}, s.timestamp = n }; var o = { start: [], move: [], end: [], none: [] }; o.add = function (e, t, r, i) { var s, u, a = !1; if (i) for (s = 0; s < o[e].length; s++) { u = o[e][s]; if (u.priority && u.priority < i) continue; o[e].splice(s, 0, { gesture: t, func: r, priority: n }), a = !0 } (!i || !a) && o[e].push({ gesture: t, func: r, priority: n }), m(t) }, o.exec = function (e, t) { var n; for (n = 0; n < o[e].length; n++) o[e][n].func(t) }; var u = "ontouchstart" in t, a, f, l; a = e.proxy(c, this), f = e.proxy(h, this), l = e.proxy(p, this), function (t, n, r) { function u(t) { var u, a, f = e(t.target); if (n.touches.move.length !== 2) return; u = r.getRotation(n.touches.start, n.touches.move), a = r.getScale(n.touches.start, n.touches.move); if (n.gesture === "transform" || Math.abs(1 - a) > i.scale_treshold || Math.abs(u) > i.rotation_treshold) n.gesture = "transform", o = { pageX: (n.touches.move[0].pageX + n.touches.move[1].pageX) / 2 - n.offset.left, pageY: (n.touches.move[0].pageY + n.touches.move[1].pageY) / 2 - n.offset.top }, s || (f.trigger(e.Event("transformstart", { originalEvent: t.originalEvent, center: o, scale: a, rotation: u })), s = !0), f.trigger(e.Event("transform", { originalEvent: t.originalEvent, center: o, scale: a, rotation: u })) } function a(t) { var i, u, a = e(t.target); n.gesture === "transform" && (i = r.getRotation(n.touches.start, n.touches.move), u = r.getScale(n.touches.start, n.touches.move), a.trigger(e.Event("transformend", { originalEvent: t.originalEvent, center: o, scale: u, rotation: i })), s = !1) } var i = { scale_treshold: .1, rotation_treshold: 15 }, s = !1, o; t.add("move", "transform", u), t.add("end", "transformend", a) }(o, s, i), function (t, n, r, i) { function l(t) { var f = (new Date).getTime(), l = f - n.timestamp, h = e(t.target); if (s.hold_timeout < l) return; t = n.events.start.originalEvent, c(t) || (o = n.touches.move ? r.getDistance(n.touches.start[0], n.touches.move[0]) : 0, o < s.tap_max_distance && (n.gesture = "tap", a = f, u = n.touches.start, i.hasEvent(h, "doubletap") ? setTimeout(function () { u && n.prevGesture !== "doubletap" && (new Date).getTime() - a > s.tap_double_max_interval && h.trigger(e.Event("tap", { originalEvent: t })) }, s.tap_double_max_interval) : h.trigger(e.Event("tap", { originalEvent: t })))) } function c(t) { return u && n.prevGesture === "tap" && n.timestamp - a < s.tap_double_max_interval && u && n.touches.start && r.getDistance(u[0], n.touches.start[0]) < s.tap_distance ? (n.gesture = "doubletap", a = null, e(t.target).trigger(e.Event("doubletap", { originalEvent: t })), !0) : !1 } function h(t) { n.gesture = "taphold", clearTimeout(f), f = setTimeout(function () { n.touches.start && !n.touches.end && (o = n.touches.move ? r.getDistance(n.touches.start[0], n.touches.move[0]) : 0, o < s.tap_max_distance && n.gesture === "taphold" && e(t.target).trigger(e.Event("taphold", { originalEvent: n.events.start ? n.events.start.originalEvent : t.originalEvent }))) }, s.hold_timeout) } var s = { tap_double_max_interval: 300, tap_max_distance: 10, tap_distance: 20, hold_timeout: 500 }, o, u, a, f; t.add("end", "tap", l), t.add("none", "doubletap", e.noop), t.add("start", "taphold", h) }(o, s, i, r), function (t, n, r) { function s(t) { var s = (new Date).getTime() - n.timestamp, o, u, a; if (!n.touches.move) return; a = r.getDistance(n.touches.start[0], n.touches.move[0]), i.swipe_time > s && a > i.swipe_min_distance && (o = r.getAngle(n.touches.start[0], n.touches.move[0]), u = r.getDirection(o), n.gesture = "swipe", e(t.target).trigger(e.Event("swipe", { originalEvent: t.originalEvent, direction: u, touches: e.extend(!0, {}, n.touches) }))) } var i = { swipe_time: 300, swipe_min_distance: 30 }; t.add("end", "swipe", s) }(o, s, i) })(jQuery, window);